{"version":3,"sources":["angular-hover-edit-dx.js"],"names":["angular","module","directive","$animate","$compile","priority","restrict","require","scope","saveFn","addFn","cancelFn","unitToSave","editMode","formName","readOnly","transclude","template","link","element","attrs","ctrls","triggerhoverAnimation","leaving","on","outerBox","children","addClass","removeClass","showIcon","setEditMode","addMode","_","isFunction","save","form","document","getElementById","hasClass","showSpinner","then","hideEditElements","showMessage","success","cancel","setupElements","editBox","after","addIcon","hasPermissions","append","elemIcon","saveSpinner","saveExitIcons","cancelClick","event","$watch","nv","ov","remove","functions","className","bindToController","controllerAs","controller","$location","hoverEditLink","this","redirectToLink","stopPropagation","path"],"mappings":"CAIA,WACI,YAEAA,SAAQC,OAAO,uBACVC,UAAU,aAAc,WAAY,WAAY,SAAUC,EAAUC,GACjE,OACIC,SAAU,IACVC,SAAU,KACVC,SAAU,wBAAyB,mBACnCC,OACIC,OAAQ,WACRC,MAAO,UACPC,SAAU,aACVC,WAAY,eACZC,SAAU,aACVC,SAAU,YACVC,SAAU,cAEdC,YAAY,EACZC,SAAU,oOAIVC,KAAM,SAAUV,EAAOW,EAASC,EAAOC,GAkDnC,QAASC,GAAsBC,GAC3B,IAAKf,EAAMK,SAASW,GAAI,CAEpB,GAAIC,GAAWN,EAAQO,SAAS,kBAAkB,EAEjC,QAAbD,IAEAA,EAAWzB,QAAQmB,QAAQM,GAEvBF,GACApB,EAASwB,SAASF,EAAU,YAC5BtB,EAASyB,YAAYH,EAAU,cAC/BjB,EAAMqB,UAAW,IAIjB1B,EAASwB,SAASF,EAAU,cAC5BtB,EAASyB,YAAYH,EAAU,YAC/BjB,EAAMqB,UAAW,KAQjC,QAASC,GAAaC,GACfA,GAAWC,EAAEC,WAAWzB,EAAME,UAC7BF,EAAME,OAEV,IAAIe,GAAWN,EAAQO,SAAS,iBAChClB,GAAMK,SAASW,IAAK,EACpBrB,EAASyB,YAAYT,EAAS,YAC9BhB,EAASwB,SAASF,EAAU,cAC5BtB,EAASyB,YAAYH,EAAU,YAInC,QAASS,KAEL,GAAIC,GAAOnC,QAAQmB,QAAQiB,SAASC,eAAe7B,EAAMM,UAGpDqB,IAASA,EAAKG,SAAS,gBACpBN,EAAEC,WAAWzB,EAAMC,SACnBD,EAAM+B,aAAc,EACpB/B,EAAMC,OAAOD,EAAMI,YAAY4B,KAAK,WAChChC,EAAM+B,aAAc,EAEpB/B,EAAMK,SAASW,IAAK,EACpBiB,IAEGpB,EAAM,IACLA,EAAM,GAAGqB,YAAYC,QAAQ,IAAI,qBAPzCnC,SASS,WACLA,EAAM+B,aAAc,MAGxB/B,EAAMK,SAASW,IAAK,EACpBiB,MAOZ,QAASG,KACLpC,EAAMK,SAASW,IAAK,EACjBQ,EAAEC,WAAWzB,EAAMG,WAClBH,EAAMG,WAEV8B,IAIJ,QAASI,KACFb,EAAEC,WAAWzB,EAAME,SAClBoC,EAAQC,MAAMC,GACd5C,EAAS4C,GAASxC,IAEjBA,EAAMO,UAAcM,EAAM,KAAMA,EAAM,GAAG4B,iBAC1CH,EAAQI,OAAOC,GACf/C,EAAS+C,GAAU3C,IAEnBa,EAAM,KAAMA,EAAM,GAAG4B,iBACrBH,EAAQC,MAAMK,GACdN,EAAQC,MAAMM,GACdjD,EAASgD,GAAa5C,GACtBJ,EAASiD,GAAe7C,IAG5BsC,EAAQnB,SAAS,YACjBR,EAAQQ,SAAS,YAGrB,QAASc,KACLnB,GAAsB,GACtBH,EAAQQ,SAAS,YAnJrB,GAAIwB,GAAWnD,QAAQmB,QAAQ,mFAC3BkC,EAAgBrD,QAAQmB,QAAQ,mjBAKhC6B,EAAUhD,QAAQmB,QAAQ,2QAC1BiC,EAAcpD,QAAQmB,QAAQ,6FAG9B2B,EAAU3B,EAAQO,SAAS,iBAC/BlB,GAAM8C,YAAc,SAAqBC,KAIzC/C,EAAMgD,OAAO,WAAY,SAASC,EAAIC,GAC9BD,GAAMC,IACFD,GACAjD,EAAMc,sBAAwB,KAC9Bd,EAAMsB,YAAc,KACpBqB,EAASQ,UAELtC,EAAM,KAAMA,EAAM,GAAG4B,iBACrBzC,EAAMc,sBAAwBA,EAC9Bd,EAAMsB,YAAcA,EACpBgB,EAAQI,OAAOC,GACf/C,EAAS+C,GAAU3C,OAM/BA,EAAMO,UAAcM,EAAM,KAAMA,EAAM,GAAG4B,iBACzCzC,EAAMc,sBAAwBA,EAC9Bd,EAAMsB,YAAcA,GAGxBtB,EAAMoD,WACF1B,KAAMA,EACNU,OAAQA,GAIZC,IACArC,EAAMK,UAAaW,IAAK,GACxBhB,EAAMqB,UAAW,EACjBrB,EAAM+B,aAAc,OA0G/BrC,UAAU,eAAgB,WACvB,OACII,SAAU,IACVW,SAAU,6JACVT,OACIqD,UAAW,kBAKtB3D,UAAU,iBAAkB,WACzB,OACII,SAAU,KACVW,SAAU,sGACVD,YAAY,EACZR,OACIU,KAAM,SAEV4C,kBAAkB,EAClBC,aAAc,gBACdC,YAAa,YAAa,SAASC,GAC/B,GAAIC,GAAgBC,IACpBD,GAAcE,eAAiB,SAASb,GAEpCA,EAAMc,kBAGNJ,EAAUK,KAAKJ,EAAchD","file":"angular-hover-edit.min.js","sourcesContent":["/**\n * Created by ericjohndixon on 7/29/15.\n */\n// Code goes here\n(function () {\n    'use strict';\n\n    angular.module('angularHoverEdit', [])\n        .directive('hoverEdit', ['$animate', '$compile', function ($animate, $compile) {\n            return {\n                priority: 100,\n                restrict: 'EA',\n                require: ['?hoverEditPermissions', '?messageService'],\n                scope: {\n                    saveFn: '=?saveFn',\n                    addFn: '=?addFn',\n                    cancelFn: '=?cancelFn',\n                    unitToSave: '=?unitToSave',\n                    editMode: '=?editMode', //external trigger\n                    formName: '@formName',\n                    readOnly: '=?readOnly'\n                },\n                transclude: true,\n                template: '<div class=\"animated-element edit-container\" ' +\n                'ng-mouseover=\"(!editMode.on) ? triggerhoverAnimation(false) : \\'\\'\" ' +\n                'ng-mouseleave=\"(!editMode.on) ? triggerhoverAnimation(true) : \\'\\'\" ' +\n                'ng-click=\"setEditMode()\"ng-transclude></div>',\n                link: function (scope, element, attrs, ctrls) {\n                    var elemIcon = angular.element('<span class=\"top-rt-corner-box\"><i class=\"lds-icon lds-icon-pencil\"></i></span>');\n                    var saveExitIcons = angular.element('<div class=\"save-exit-btns\">'+\n                        '<button class=\"btn btn-danger-hover\" ng-disabled=\"showSpinner\" type=\"button\" ng-show=\"editMode.on\" ng-click=\"functions.cancel()\" tooltip-popup-delay=\"500\" tooltip-append-to-body=\"true\" tooltip=\"Cancel Changes\" style=\"float: right\">CANCEL</button>' +\n                        '<button class=\"btn btn-success-hover\" ng-disabled=\"showSpinner\" type=\"submit\" form=\"{{formName}}\" ng-show=\"editMode.on\" ng-click=\"functions.save()\" tooltip-popup-delay=\"500\" tooltip-append-to-body=\"true\" tooltip=\"Save Changes\" style=\"float: right;margin-right: 2px\">SAVE</button>' +\n\n                        '</div>');\n                    var addIcon = angular.element('<button class=\"margin-bot-5 btn btn-default add-btn add-restriction\" type=\"button\" ng-show=\"editMode.on\" ng-click=\"setEditMode(true)\" tooltip-popup-delay=\"500\" tooltip-append-to-body=\"true\" tooltip=\"Add Restriction\"><i class=\"lds-icon lds-icon-add\"></i> </button>');\n                    var saveSpinner = angular.element('<div class=\"hover-edit-spinner\" ng-show=\"showSpinner\"><util-spinner></util-spinner></div>');\n\n\n                    var editBox = element.children('.editContainer');\n                    scope.cancelClick = function cancelClick(event) {\n                        event;\n                    };\n\n                    scope.$watch('readOnly', function(nv, ov) {\n                        if (nv != ov) {\n                            if (nv) {\n                                scope.triggerhoverAnimation = null;\n                                scope.setEditMode = null;\n                                elemIcon.remove();\n                            } else {\n                                if(!ctrls[0] || ctrls[0].hasPermissions) {\n                                    scope.triggerhoverAnimation = triggerhoverAnimation;\n                                    scope.setEditMode = setEditMode;\n                                    editBox.append(elemIcon);\n                                    $compile(elemIcon)(scope);\n                                }\n                            }\n                        }\n                    });\n\n                    if(!scope.readOnly && (!ctrls[0] || ctrls[0].hasPermissions)) {\n                        scope.triggerhoverAnimation = triggerhoverAnimation;\n                        scope.setEditMode = setEditMode;\n                    }\n\n                    scope.functions = {\n                        save: save,\n                        cancel: cancel\n                    };\n                    //scope.cancel = cancel;\n\n                    setupElements();\n                    scope.editMode = { on : false};\n                    scope.showIcon = false;\n                    scope.showSpinner = false;\n\n                    //trigger hover animation for mouseover(leaving = false) or mouseleaving (leaving = true)\n                    function triggerhoverAnimation(leaving) {\n                        if (!scope.editMode.on) {\n                            //var outerBox = document.querySelector(\"#editContainer\");\n                            var outerBox = element.children('.editContainer')[0];\n\n                            if (outerBox !== null)\n                            {\n                                outerBox = angular.element(outerBox);\n\n                                if (leaving) {\n                                    $animate.addClass(outerBox, 'edit-box');\n                                    $animate.removeClass(outerBox, 'box-border');\n                                    scope.showIcon = false;\n\n                                }\n                                else {\n                                    $animate.addClass(outerBox, 'box-border');\n                                    $animate.removeClass(outerBox, 'edit-box');\n                                    scope.showIcon = true;\n                                }\n                            }\n                        }\n                    }\n\n\n                    // clicking box for editing\n                    function setEditMode (addMode) {\n                        if(addMode && _.isFunction(scope.addFn())) {\n                            scope.addFn();\n                        }\n                        var outerBox = element.children('.editContainer');\n                        scope.editMode.on = true;\n                        $animate.removeClass(element, 'disabled');\n                        $animate.addClass(outerBox, 'box-border');\n                        $animate.removeClass(outerBox, 'edit-box');\n                    }\n\n                    //Save Icon Click\n                    function save() {\n                        //if there is a form associated with the element\n                        var form = angular.element(document.getElementById(scope.formName));\n\n                        //Only able to save if form is valid\n                        if (!form || !form.hasClass('ng-invalid')) {\n                            if (_.isFunction(scope.saveFn)) {\n                                scope.showSpinner = true;\n                                scope.saveFn(scope.unitToSave).then(function () {\n                                    scope.showSpinner = false;\n                                    //$compile(saveExitIcons)(scope);\n                                    scope.editMode.on = false;\n                                    hideEditElements();\n\n                                    if(ctrls[1]) {\n                                        ctrls[1].showMessage.success('')('Save Successful');\n                                    }\n                                }).catch(function() {\n                                    scope.showSpinner = false;\n                                });\n                            } else {\n                                scope.editMode.on = false;\n                                hideEditElements();\n                            }\n                        }\n\n                    }\n\n                    //Cancel Icon Click\n                    function cancel() {\n                        scope.editMode.on = false;\n                        if(_.isFunction(scope.cancelFn)) {\n                            scope.cancelFn();\n                        }\n                        hideEditElements();\n                    }\n\n                    // initial creation of elements\n                    function setupElements() {\n                        if(_.isFunction(scope.addFn)) {\n                            editBox.after(addIcon);\n                            $compile(addIcon)(scope);\n                        }\n                        if (!scope.readOnly && (!ctrls[0] || ctrls[0].hasPermissions)) {\n                            editBox.append(elemIcon);\n                            $compile(elemIcon)(scope);\n                        }\n                        if(!ctrls[0] || ctrls[0].hasPermissions) {\n                            editBox.after(saveSpinner);\n                            editBox.after(saveExitIcons);\n                            $compile(saveSpinner)(scope);\n                            $compile(saveExitIcons)(scope);\n                        }\n\n                        editBox.addClass('edit-box');\n                        element.addClass('disabled');\n                    }\n\n                    function hideEditElements() {\n                        triggerhoverAnimation(true);\n                        element.addClass('disabled');\n                    }\n                }\n            };\n        }])\n        .directive('utilSpinner', [function () {\n            return {\n                restrict: 'E',\n                template: '<span us-spinner=\"{radius:4, width:2, length: 2, lines: 9, scale: 1.5, corners: 1.0, speed: 2.0, hwaccel: true, trail: 100, className: className}\"></span>',\n                scope: {\n                    className: '@className'\n                }\n            };\n\n        }])\n        .directive('hoverEditLink', [function(){\n            return {\n                restrict: 'EA',\n                template: '<span class=\"hover-edit-link\" ng-click=\"hoverEditLink.redirectToLink($event)\" ng-transclude></span>',\n                transclude: true,\n                scope: {\n                    link: '@link'\n                },\n                bindToController: true,\n                controllerAs: 'hoverEditLink',\n                controller: ['$location', function($location){\n                    var hoverEditLink = this;\n                    hoverEditLink.redirectToLink = function(event) {\n                        //disallow edit mode if link is clicked\n                        event.stopPropagation();\n\n                        // will add '/' if missing\n                        $location.path(hoverEditLink.link);\n                    }\n                }]\n            }\n        }]);\n\n})();\n"],"sourceRoot":"/source/"}